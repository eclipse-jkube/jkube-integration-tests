#
# Copyright (c) 2019 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at:
#
#     https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#
# Contributors:
#   Red Hat, Inc. - initial API and implementation
#

name: JKube E2E Tests

on:
  push:
    branches:
      - master
  pull_request:

env:
  JKUBE_REPOSITORY: https://github.com/eclipse/jkube.git
  JKUBE_REVISION: master
  JKUBE_DIR: jkube

jobs:
  minikube:
    name: K8S
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kubernetes: [v1.12.0,v1.18.6]
        suite: ['quarkus','quarkus-native','springboot','webapp','other', 'dockerfile']
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Setup Minikube-Kubernetes
        uses: manusa/actions-setup-minikube@v2.0.0
        with:
          minikube version: v1.12.1
          kubernetes version: ${{ matrix.kubernetes }}
          github token: ${{ secrets.GITHUB_TOKEN }}
          start args: --force
      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Checkout JKube Repository
        run: |
          git clone "$JKUBE_REPOSITORY" \
          && cd $JKUBE_DIR \
          && git checkout "$JKUBE_REVISION"
      - name: Install JKube
        run: cd $JKUBE_DIR && mvn -f pom.xml -B -DskipTests clean install && rm -rf $JKUBE_DIR
      - name: Install and Run Integration Tests
        run: |
          cd $JKUBE_DIR \
          && JKUBE_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec) \
          && cd .. \
          && ./mvnw -B -PKubernetes,${{ matrix.suite }} clean verify -Djkube.version="$JKUBE_VERSION"
      - name: Save reports as artifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Test reports (Minikube ${{ matrix.kubernetes }}-${{ matrix.suite }})
          path: ./it/target/jkube-test-report.txt
  openshift:
    name: OpenShift
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        openshift: [v3.9.0,v3.11.0]
        suite: ['quarkus','springboot','webapp','other']
    steps:
      - name: Free up Space
#            'linux-headers.*'                       \ # Takes > 2 minutes
#            'google-cloud.*'                        \
        run: |
          sudo apt list --installed
          sudo apt-get purge -y                     \
            'aspnetcore.*'                          \
            'cabal-install.*'                       \
            'clang.*'                               \
            'dotnet.*'                              \
            'firefox.*'                             \
            'ghc.*'                                 \
            'google-chrome.*'                       \
            'heroku.*'                              \
            'libmagic.*'                            \
            'libmono.*'                             \
            'mono-.*'                               \
            'mysql.*'                               \
            'php.*'                                 \
            'ruby.*'
          sudo apt-get autoremove
          df -h
      - name: Checkout
        uses: actions/checkout@v2.0.0
      - name: Setup OpenShift
        uses: manusa/actions-setup-openshift@v1.1.0
        with:
          oc version: ${{ matrix.openshift }}
          github token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Java 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      - name: Checkout JKube Repository
        run: |
          git clone "$JKUBE_REPOSITORY" \
          && cd $JKUBE_DIR \
          && git checkout "$JKUBE_REVISION"
      - name: Install JKube
        run: cd $JKUBE_DIR && mvn -f pom.xml -B -DskipTests clean install && rm -rf $JKUBE_DIR
      - name: Install and Run Integration Tests
        run: |
          cd $JKUBE_DIR \
          && JKUBE_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec) \
          && cd .. \
          && ./mvnw -B -POpenShift,${{ matrix.suite }} clean verify -Djkube.version="$JKUBE_VERSION" -Djunit.jupiter.execution.parallel.config.fixed.parallelism=4
      - name: Save reports as artifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Test reports (OpenShift ${{ matrix.openshift }}-${{ matrix.suite }})
          path: ./it/target/jkube-test-report.txt
      - name: Cluster Information
        if: always()
        run: |
          oc login -u system:admin
          oc describe node localhost
          oc login -u developer
